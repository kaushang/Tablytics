let T=null,b=null,l={},h=null,m={},w={},D=new Set,d=!0,L=null,y=!1,n=Date.now(),f=[],c={},E=0;const g=()=>{const t=new Date;return`${t.getFullYear()}-${String(t.getMonth()+1).padStart(2,"0")}-${String(t.getDate()).padStart(2,"0")}`};chrome.storage.local.get(["tabData","activeDomain","timeLimits","strictLimits","isTrackingEnabled","dailyTabData"],t=>{t.tabData&&(l=t.tabData),t.activeDomain&&(h=t.activeDomain),t.timeLimits&&(m=t.timeLimits),t.strictLimits&&(w=t.strictLimits),t.isTrackingEnabled!==void 0&&(d=t.isTrackingEnabled),t.dailyTabData&&(c=t.dailyTabData);const s=g();c[s]||(c[s]={tabData:{},websitesVisited:[],totalTime:0},chrome.storage.local.set({dailyTabData:c})),o(),p(),$()});function A(t,s){const r=g();c[r]||(c[r]={tabData:{},websitesVisited:[],totalTime:0});const i=c[r];i.tabData[t]||(i.tabData[t]=0),i.tabData[t]+=s,i.websitesVisited.includes(t)||i.websitesVisited.push(t),i.totalTime=Object.values(i.tabData).reduce((e,a)=>e+a,0),chrome.storage.local.set({dailyTabData:c})}async function o(){if(d)try{E=Date.now();let s=[];const r=await chrome.windows.getAll({populate:!0});for(const i of r){const e=i.tabs.find(a=>a.active);if(e&&W(e)&&(s.push(e),i.focused&&(T=e.id,b=Date.now(),n=Date.now(),e.url)))try{e.url.startsWith("chrome://")||e.url.startsWith("chrome-extension://")||e.url.startsWith("about:")||e.url.startsWith("edge://")?h=e.url.split("/").slice(0,3).join("/").replace(/\/$/,""):h=new URL(e.url).hostname,h||(h="New Tab"),chrome.storage.local.set({activeDomain:h})}catch(a){console.log("Error setting active domain:",a)}}f=s.filter(i=>{try{return i.url}catch{return!1}}),console.log(`Tracking ${f.length} active tabs across ${new Set(f.map(i=>i.windowId)).size} windows`)}catch(t){console.log("Error checking active tabs:",t)}}function W(t){try{return t&&t.url&&t.status==="complete"}catch{return!1}}const S=async(t,s)=>{if(m[t]&&s>=m[t])if(w[t]){if(!D.has(t)){console.log(`Strict time limit reached for ${t}. Closing tabs...`),D.add(t);const r=await chrome.tabs.query({});let i=0;for(const e of r)try{let a;e.url&&(e.url.startsWith("chrome://")||e.url.startsWith("chrome-extension://")||e.url.startsWith("about:")||e.url.startsWith("edge://")?a=e.url.split("/").slice(0,3).join("/").replace(/\/$/,""):a=new URL(e.url).hostname,a||(a="New Tab"),a===t&&(await chrome.tabs.remove(e.id),i++))}catch(a){console.log("Error processing tab for strict limit:",a)}i>0&&chrome.notifications.create({type:"basic",iconUrl:"icons/icon128.png",title:"Strict Time Limit Enforced",message:`Reached limit of ${v(m[t])} on ${t}. ${i} tab(s) have been closed.`}),setTimeout(()=>{D.delete(t)},3e5)}}else D.has(t)||(chrome.notifications.create({type:"basic",iconUrl:"icons/icon128.png",title:"Time Limit Reached",message:`You've spent ${v(s)} on ${t}. Your limit was ${v(m[t])}.`}),D.add(t),setTimeout(()=>{D.delete(t)},36e5))},v=t=>{const s=Math.floor(t/1e3),r=Math.floor(s/60),i=Math.floor(r/60);return i>0?`${i}h ${r%60}m`:`${r}m ${s%60}s`};async function p(){try{const t=await chrome.tabs.query({}),s=new Set;for(const a of t)try{if(a.url){let u;a.url.startsWith("chrome://")||a.url.startsWith("chrome-extension://")||a.url.startsWith("about:")||a.url.startsWith("edge://")?u=a.url.split("/").slice(0,3).join("/").replace(/\/$/,""):u=new URL(a.url).hostname,u||(u="New Tab"),s.add(u)}}catch(u){console.log("Error processing tab URL:",u)}const r=g();let i=!1;const e={};for(const[a,u]of Object.entries(l))s.has(a)?e[a]=u:i=!0;i&&(l=e,chrome.storage.local.set({tabData:l}),console.log("Removed closed tabs from tracking data"))}catch(t){console.log("Error cleaning up closed tabs:",t)}}async function I(){if(!(y||!d)){y=!0;try{if(Date.now()-E>5e3&&await o(),f.length===0){y=!1;return}const s=Date.now(),r=1e3,i=r/f.length;for(const e of f)try{if(e.url){let a;e.url.startsWith("chrome://")||e.url.startsWith("chrome-extension://")||e.url.startsWith("about:")||e.url.startsWith("edge://")?a=e.url.split("/").slice(0,3).join("/").replace(/\/$/,""):a=new URL(e.url).hostname,a||(a="New Tab"),l[a]||(l[a]=0),l[a]+=r,A(a,i),await S(a,l[a])}}catch(a){console.log("Error processing tab in tracking:",a)}await chrome.storage.local.set({tabData:l}),b=s,n=s}catch(t){console.log("Error in tab tracking update:",t)}finally{y=!1}}}function $(){L&&clearInterval(L),L=setInterval(async()=>{await I()},1e3),setInterval(async()=>{Date.now()-n>5e3&&(console.log("Heartbeat check - no recent updates, refreshing active tabs"),await o())},1e4)}chrome.tabs.onActivated.addListener(async t=>{console.log("Tab activated:",t),T=t.tabId,b=Date.now(),n=Date.now(),await o()});chrome.tabs.onUpdated.addListener(async(t,s,r)=>{d&&(s.url&&(console.log("Tab URL changed:",t,s.url),n=Date.now(),await o()),s.status==="complete"&&await o(),n=Date.now())});chrome.tabs.onCreated.addListener(async t=>{d&&(console.log("New tab created:",t.id),n=Date.now(),await o())});chrome.tabs.onRemoved.addListener(async t=>{t===T&&(T=null,b=null,await o());const s=f.findIndex(r=>r.id===t);s>=0&&f.splice(s,1),setTimeout(async()=>{await p(),await o()},500)});chrome.windows.onFocusChanged.addListener(async t=>{t!==chrome.windows.WINDOW_ID_NONE&&(n=Date.now(),await o())});chrome.windows.onCreated.addListener(async t=>{n=Date.now(),await o()});chrome.runtime.onMessage.addListener((t,s,r)=>{if(t.type==="USER_ACTIVITY")return n=Date.now(),r({success:!0}),!0;if(t.type==="GET_TAB_DATA"){if(t.forceRefresh)o().then(()=>{p().then(()=>{const i=g(),e=c[i]||{websitesVisited:[],totalTime:0};r({tabData:l,activeDomain:h,timeLimits:m,strictLimits:w,activeTabs:f,dailyData:e})})});else{const i=g(),e=c[i]||{websitesVisited:[],totalTime:0};r({tabData:l,activeDomain:h,timeLimits:m,strictLimits:w,activeTabs:f,dailyData:e})}return!0}else{if(t.type==="CLEAR_DATA")return l={},h=null,D.clear(),d?(b=Date.now(),n=Date.now()):(T=null,b=null),chrome.storage.local.set({tabData:{},activeDomain:null},()=>{r({success:!0})}),o(),!0;if(t.type==="CLEAR_DAILY_DATA"){const i=g();return c[i]?(c[i]={tabData:{},websitesVisited:[],totalTime:0},chrome.storage.local.set({dailyTabData:c},()=>{r({success:!0})})):r({success:!0}),!0}else if(t.type==="SET_TIME_LIMIT"){const{domain:i,limit:e,strict:a}=t;return e?(m[i]=e,a?w[i]=!0:delete w[i]):(delete m[i],delete w[i]),chrome.storage.local.set({timeLimits:m,strictLimits:w},()=>{r({success:!0})}),!0}else if(t.type==="TOGGLE_TRACKING")return d=t.enabled,d?(b=Date.now(),n=Date.now(),o()):b=null,chrome.storage.local.set({isTrackingEnabled:d},()=>{r({success:!0,isTrackingEnabled:d})}),!0}});chrome.tabs.onUpdated.addListener((t,s,r)=>{d&&t===T&&s.status&&(b=Date.now(),n=Date.now())});p();$();o();
