let y=null,g=null,u={},b=null,l={},w={},D=new Set,f=!0,S=null,p=!1,h=Date.now(),d=[],c={},$=0,n=null;const T=()=>{const t=new Date;return`${t.getFullYear()}-${String(t.getMonth()+1).padStart(2,"0")}-${String(t.getDate()).padStart(2,"0")}`};function A(){L()}function L(){const t=Date.now(),s=`session_${t}`;return chrome.storage.session.set({sessionStartTime:t,sessionId:s}),n=t,chrome.storage.local.set({lastSessionId:s}),console.log("New session started:",s,"at",new Date(t)),s}chrome.storage.local.get(["tabData","activeDomain","timeLimits","strictLimits","isTrackingEnabled","dailyTabData"],t=>{t.tabData&&(u=t.tabData),t.activeDomain&&(b=t.activeDomain),t.timeLimits&&(l=t.timeLimits),t.strictLimits&&(w=t.strictLimits),t.isTrackingEnabled!==void 0&&(f=t.isTrackingEnabled),t.dailyTabData&&(c=t.dailyTabData);const s=T();c[s]||(c[s]={tabData:{},websitesVisited:[],totalTime:0},chrome.storage.local.set({dailyTabData:c})),chrome.runtime.getPlatformInfo(function(r){console.log("Extension loaded, platform:",r.os),n=null,A(),o(),v(),I()})});function W(t,s){const r=T();c[r]||(c[r]={tabData:{},websitesVisited:[],totalTime:0});const i=c[r];i.tabData[t]||(i.tabData[t]=0),i.tabData[t]+=s,i.websitesVisited.includes(t)||i.websitesVisited.push(t),i.totalTime=Object.values(i.tabData).reduce((e,a)=>e+a,0),chrome.storage.local.set({dailyTabData:c})}async function o(){if(f)try{$=Date.now();let s=[];const r=await chrome.windows.getAll({populate:!0});for(const i of r){const e=i.tabs.find(a=>a.active);if(e&&U(e)&&(s.push(e),i.focused&&(y=e.id,g=Date.now(),h=Date.now(),e.url)))try{e.url.startsWith("chrome://")||e.url.startsWith("chrome-extension://")||e.url.startsWith("about:")||e.url.startsWith("edge://")?b=e.url.split("/").slice(0,3).join("/").replace(/\/$/,""):b=new URL(e.url).hostname,b||(b="New Tab"),chrome.storage.local.set({activeDomain:b})}catch(a){console.log("Error setting active domain:",a)}}d=s.filter(i=>{try{return i.url}catch{return!1}}),d.length>0&&!n&&L(),console.log(`Tracking ${d.length} active tabs across ${new Set(d.map(i=>i.windowId)).size} windows`)}catch(t){console.log("Error checking active tabs:",t)}}function U(t){try{return t&&t.url&&t.status==="complete"}catch{return!1}}const k=async(t,s)=>{if(l[t]&&s>=l[t])if(w[t]){if(!D.has(t)){console.log(`Strict time limit reached for ${t}. Closing tabs...`),D.add(t);const r=await chrome.tabs.query({});let i=0;for(const e of r)try{let a;e.url&&(e.url.startsWith("chrome://")||e.url.startsWith("chrome-extension://")||e.url.startsWith("about:")||e.url.startsWith("edge://")?a=e.url.split("/").slice(0,3).join("/").replace(/\/$/,""):a=new URL(e.url).hostname,a||(a="New Tab"),a===t&&(await chrome.tabs.remove(e.id),i++))}catch(a){console.log("Error processing tab for strict limit:",a)}i>0&&(chrome.notifications.create({type:"basic",iconUrl:"icons/icon128.png",title:"Strict Time Limit Enforced",message:`Reached limit of ${E(l[t])} on ${t}. ${i} tab(s) have been closed.`}),console.log(`Removing strict time limit for ${t} after enforcement`),delete w[t],delete l[t],chrome.storage.local.set({timeLimits:l,strictLimits:w})),setTimeout(()=>{D.delete(t)},3e5)}}else D.has(t)||(chrome.notifications.create({type:"basic",iconUrl:"icons/icon128.png",title:"Time Limit Reached",message:`You've spent ${E(s)} on ${t}. Your limit was ${E(l[t])}.`}),D.add(t),setTimeout(()=>{D.delete(t)},36e5))},E=t=>{const s=Math.floor(t/1e3),r=Math.floor(s/60),i=Math.floor(r/60);return i>0?`${i}h ${r%60}m`:`${r}m ${s%60}s`};async function v(){try{const t=await chrome.tabs.query({}),s=new Set;for(const a of t)try{if(a.url){let m;a.url.startsWith("chrome://")||a.url.startsWith("chrome-extension://")||a.url.startsWith("about:")||a.url.startsWith("edge://")?m=a.url.split("/").slice(0,3).join("/").replace(/\/$/,""):m=new URL(a.url).hostname,m||(m="New Tab"),s.add(m)}}catch(m){console.log("Error processing tab URL:",m)}const r=T();let i=!1;const e={};for(const[a,m]of Object.entries(u))s.has(a)?e[a]=m:i=!0;i&&(u=e,chrome.storage.local.set({tabData:u}),console.log("Removed closed tabs from tracking data"))}catch(t){console.log("Error cleaning up closed tabs:",t)}}async function C(){if(!(p||!f)){p=!0;try{if(Date.now()-$>5e3&&await o(),!n){p=!1;return}if(d.length===0){p=!1;return}const s=Date.now(),r=1e3,i=r/d.length;for(const e of d)try{if(e.url){let a;e.url.startsWith("chrome://")||e.url.startsWith("chrome-extension://")||e.url.startsWith("about:")||e.url.startsWith("edge://")?a=e.url.split("/").slice(0,3).join("/").replace(/\/$/,""):a=new URL(e.url).hostname,a||(a="New Tab"),u[a]||(u[a]=0),u[a]+=r,W(a,i),await k(a,u[a])}}catch(a){console.log("Error processing tab in tracking:",a)}await chrome.storage.local.set({tabData:u}),g=s}catch(t){console.log("Error in tab tracking update:",t)}finally{p=!1}}}function I(){S&&clearInterval(S),S=setInterval(async()=>{n&&await C()},1e3),setInterval(async()=>{await o()},1e4)}chrome.tabs.onActivated.addListener(async t=>{console.log("Tab activated:",t),y=t.tabId,g=Date.now(),h=Date.now(),n||L(),await o()});chrome.tabs.onUpdated.addListener(async(t,s,r)=>{f&&(s.url&&(console.log("Tab URL changed:",t,s.url),h=Date.now(),await o()),s.status==="complete"&&await o(),h=Date.now())});chrome.tabs.onCreated.addListener(async t=>{f&&(console.log("New tab created:",t.id),h=Date.now(),await o())});chrome.tabs.onRemoved.addListener(async t=>{t===y&&(y=null,g=null,await o());const s=d.findIndex(r=>r.id===t);s>=0&&d.splice(s,1),setTimeout(async()=>{await v(),await o()},500)});chrome.windows.onFocusChanged.addListener(async t=>{t!==chrome.windows.WINDOW_ID_NONE&&(h=Date.now(),await o())});chrome.windows.onCreated.addListener(async t=>{h=Date.now(),await o()});chrome.runtime.onMessage.addListener((t,s,r)=>{if(t.type==="USER_ACTIVITY")return h=Date.now(),r({success:!0}),!0;if(t.type==="GET_TAB_DATA"){if(t.forceRefresh)o().then(()=>{v().then(()=>{const i=T(),e=c[i]||{websitesVisited:[],totalTime:0};r({tabData:u,activeDomain:b,timeLimits:l,strictLimits:w,activeTabs:d,dailyData:e,sessionStartTime:n,currentSessionTime:n?Date.now()-n:0})})});else{const i=T(),e=c[i]||{websitesVisited:[],totalTime:0};r({tabData:u,activeDomain:b,timeLimits:l,strictLimits:w,activeTabs:d,dailyData:e,sessionStartTime:n,currentSessionTime:n?Date.now()-n:0})}return!0}else{if(t.type==="CLEAR_DATA")return u={},b=null,D.clear(),f?(g=Date.now(),h=Date.now()):(y=null,g=null),chrome.storage.local.set({tabData:{},activeDomain:null},()=>{r({success:!0})}),o(),!0;if(t.type==="CLEAR_DAILY_DATA"){const i=T();return c[i]?(c[i]={tabData:{},websitesVisited:[],totalTime:0},chrome.storage.local.set({dailyTabData:c},()=>{r({success:!0})})):r({success:!0}),!0}else if(t.type==="SET_TIME_LIMIT"){const{domain:i,limit:e,strict:a}=t;return e?(l[i]=e,a?w[i]=!0:delete w[i]):(delete l[i],delete w[i]),chrome.storage.local.set({timeLimits:l,strictLimits:w},()=>{r({success:!0})}),!0}else if(t.type==="TOGGLE_TRACKING")return f=t.enabled,f?(g=Date.now(),h=Date.now(),n||L(),o()):g=null,chrome.storage.local.set({isTrackingEnabled:f},()=>{r({success:!0,isTrackingEnabled:f})}),!0}});chrome.tabs.onUpdated.addListener((t,s,r)=>{f&&t===y&&s.status&&(g=Date.now(),h=Date.now())});chrome.runtime.onStartup.addListener(()=>{console.log("Browser started - initializing session tracking"),n=null,A(),o()});v();I();o();
